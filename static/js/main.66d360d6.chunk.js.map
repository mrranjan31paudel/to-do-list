{"version":3,"sources":["components/Tab.js","components/Navmenu.js","components/Search.js","components/Addtodo.js","components/Listitem.js","components/Todolist.js","components/Emptylist.js","App.js","serviceWorker.js","index.js"],"names":["Tab","clickHandle","props","onClick","value","className","this","status","href","link","React","Component","Navmenu","tabName","tabClick","activeTab","Search","onChangeHandle","e","onChange","target","placeholder","searchText","Addtodo","keyDownCheck","keyCode","onKeyDown","Listitem","taskString","checkStatus","type","checked","Todolist","map","val","key","id","title","onCheckBoxClick","Emptylist","App","taskInputCompleted","inputTitle","setState","data","state","indexUpdate","searchInput","input","searchInputString","tabClickHandle","clickedTab","clickedTabName","checkBoxHandle","indexOftask","formerPortion","slice","toChange","laterPortion","filterDataToRender","filter","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66d360d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/tab-button.css';\r\n\r\nclass Tab extends React.Component {\r\n\tclickHandle = () => {\r\n\t\tthis.props.onClick(this.props.value);\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t<a className={'tab-button '+this.props.status} href={this.props.link} onClick={this.clickHandle}>{this.props.value}</a>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Tab;","import React from 'react';\r\nimport Tab from './Tab';\r\n\r\nclass Navmenu extends React.Component {\r\n\tclickHandle = tabName => {\r\n\t\tthis.props.tabClick(tabName);\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className = \"nav-menu\">\r\n\t\t\t\t<Tab value=\"Home\" status={'Home'===this.props.activeTab? 'active': ''} onClick={this.clickHandle}/>\r\n\t\t\t\t<Tab value=\"Completed\" status={'Completed'===this.props.activeTab? 'active': ''} onClick={this.clickHandle}/>\r\n\t\t\t\t<Tab value=\"Remaining\" status={'Remaining'===this.props.activeTab? 'active': ''} onClick={this.clickHandle}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navmenu;","import React from 'react';\r\nimport '../styles/search.css';\r\n\r\nclass Search extends React.Component {\r\n\tonChangeHandle = (e) => {\r\n\t\tthis.props.onChange(e.target.value);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"search-box\">\r\n\t\t\t\t<input className=\"search-text\" placeholder=\"Search\" onChange={this.onChangeHandle} value={this.props.searchText}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport '../styles/add-todo.css';\r\n\r\nclass Addtodo extends React.Component {\r\n\t\r\n\tkeyDownCheck = e => {\r\n\t\tif(e.keyCode === 13 && e.target.value){\r\n\t\t\tthis.props.onKeyDown(e.keyCode, e.target.value);\r\n\t\t\te.target.value = '';\r\n\t\t}\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"add-todo-box\">\r\n\t\t\t\t<input className=\"add-todo-text\" placeholder=\"Add a task\" onKeyDown={this.keyDownCheck}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Addtodo;","import React from 'react';\r\nimport '../styles/list-item.css';\r\n\r\nclass Listitem extends React.Component {\r\n\trender(){\r\n\t\tconst {taskString, checkStatus} = this.props;\r\n\t\treturn(\r\n\t\t\t<li className=\"list-item\">\r\n\t\t\t\t<p>{taskString}</p>\r\n\t\t\t\t<input className=\"check-box\" type=\"checkbox\" onChange={this.props.onChange} checked={checkStatus}/>\r\n\t\t\t</li>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default Listitem;","import React from 'react';\r\nimport Listitem from './Listitem';\r\nimport '../styles/todo-list.css';\r\n\r\nclass Todolist extends React.Component {\r\n\t\r\n\trender(){\r\n\t\tconst { value } = this.props;\r\n\t\treturn(\r\n\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t{value.map((val) => \r\n\t\t\t\t<Listitem key={val.id} taskString={val.title} onChange={()=>this.props.onCheckBoxClick(val.id)} checkStatus={val.checked}/>)}\r\n\t\t\t</ul>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default Todolist;","import React from 'react';\r\nimport '../styles/empty-list.css';\r\n\r\nclass Emptylist extends React.Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"empty-list\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNo tasks to show!\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Emptylist;","import React from 'react';\nimport Navmenu from './components/Navmenu';\nimport Search from './components/Search';\nimport Addtodo from './components/Addtodo';\nimport Todolist from './components/Todolist';\nimport Emptylist from './components/Emptylist';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      data : [],\n      searchInputString : '',\n      clickedTabName : 'Home',\n      indexUpdate : 0,\n    };\n  }\n\n  taskInputCompleted = (keyCode, inputTitle) => {\n    if(keyCode === 13){\n      this.setState({\n        data : [...this.state.data, {id:this.state.indexUpdate, title: inputTitle, checked: false}],\n        indexUpdate : this.state.indexUpdate + 1,\n      });\n    }\n  }\n\n  searchInput = input => {\n    this.setState({\n      searchInputString : input,\n    }); \n  }\n\n  tabClickHandle = clickedTab => {\n    this.setState({\n      clickedTabName : clickedTab,\n      searchInputString : '',\n    });\n  }\n\n  checkBoxHandle = (indexOftask) => {\n    const formerPortion = this.state.data.slice(0, indexOftask);\n    const toChange = {id:this.state.data[indexOftask].id, title:this.state.data[indexOftask].title, checked: this.state.data[indexOftask].checked};\n    const laterPortion = this.state.data.slice(indexOftask+1);\n    this.setState({\n      data : [...formerPortion, {id:toChange.id, title: toChange.title, checked: !toChange.checked}, ...laterPortion],\n    });\n  }\n\n  filterDataToRender = () => {\n    if(this.state.clickedTabName === 'Home'){\n      return this.state.data.filter(val => val.title.includes(this.state.searchInputString));\n    }\n    else if(this.state.clickedTabName === 'Completed'){\n      return this.state.data.filter(val => val.checked===true).filter(val => val.title.includes(this.state.searchInputString));\n    }\n    else if(this.state.clickedTabName === 'Remaining'){\n      return this.state.data.filter(val => val.checked===false).filter(val => val.title.includes(this.state.searchInputString));\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navmenu tabClick={this.tabClickHandle} activeTab={this.state.clickedTabName}/>\n        <Search onChange={this.searchInput} searchText={this.state.searchInputString}/>\n        <Addtodo onKeyDown={this.taskInputCompleted}/>\n        {\n          this.filterDataToRender().length!==0 ? //if\n          <Todolist value={this.filterDataToRender()} onCheckBoxClick={this.checkBoxHandle}/> : //else\n          <Emptylist/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}